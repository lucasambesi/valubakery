@using ValuBakery.Data.DTOs
@using ValuBakery.Data.Enums
@using MudBlazor

<MudDialog Class="pa-4" MaxWidth="MaxWidth.Small">

    <TitleContent>
        <MudText Typo="Typo.h6" Align="Align.Center" Class="fw-bold">Editar Ingrediente</MudText>
    </TitleContent>

    <DialogContent>
        <MudForm @ref="form">

            <MudTextField Label="Nombre"
                          @bind-Value="IngredientDto.Name"
                          Required="true"
                          For="@(() => IngredientDto.Name)"
                          Margin="Margin.Dense" />

            <MudNumericField T="decimal"
                             Label="Costo por unidad"
                             @bind-Value="IngredientDto.CostPerUnit"
                             Required="true"
                             Min="0"
                             For="@(() => IngredientDto.CostPerUnit)"
                             Margin="Margin.Dense" />

            <MudSelect T="UnitEnum"
                       Label="Unidad"
                       @bind-Value="IngredientDto.Unit"
                       Margin="Margin.Dense"
                       Required="true">
                @foreach (var unit in Enum.GetValues<UnitEnum>())
                {
                    <MudSelectItem Value="@unit">@unit</MudSelectItem>
                }
            </MudSelect>

        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Save" Disabled="@isSaving" Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save">Guardar</MudButton>
        <MudButton OnClick="Cancel" Variant="Variant.Text">Cancelar</MudButton>
    </DialogActions>
</MudDialog>
